@using System.ComponentModel.DataAnnotations
@using Microsoft.EntityFrameworkCore
@using UTB.EShop.Application.DataTransferObjects.Identity
@inherits LayoutComponentBase
@inject HttpClient HttpClient
@inject IConfiguration Configuration

<!-- Navbar Top Image -->
<img src="img/navbar.jpg" class="object-fit-cover cover-image" alt="navbar top image">
<!-- Navbar Top Image -->

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-light bg-transparent" aria-label="Navigation bar">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">
      UTB
    </a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar" aria-controls="navbar" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse justify-content-center" id="navbar">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="#">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" href="/Carousel">Carousel</a>
        </li>
        <li class="nav-item">
          <a class="nav-link active" href="#" tabindex="-1" aria-disabled="true">Products</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link active dropdown-toggle" href="#" id="navbar-dropdown-management" data-bs-toggle="dropdown" aria-expanded="false">Managment</a>
          <ul class="dropdown-menu" aria-labelledby="navbar-dropdown-management">
            <li><h6 class="dropdown-header">Carousel</h6></li>
            <li><a class="dropdown-item" href="#">Select</a></li>
            <li><a class="dropdown-item" href="#">Create</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><h6 class="dropdown-header">Products</h6></li>
            <li><a class="dropdown-item" href="#">Select</a></li>
            <li><a class="dropdown-item" href="#">Create</a></li>
          </ul>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link active dropdown-toggle" href="#" id="navbar-dropdown-signin" data-bs-toggle="dropdown" aria-expanded="false">SignIn</a>
          <ul class="dropdown-menu" aria-labelledby="navbar-dropdown-signin">
            <EditForm Model="NewUser" OnValidSubmit="OnValidSubmitSignInUserAsync" OnInvalidSubmit="OnInvalidSubmitSignInUserAsync">
              <DataAnnotationsValidator></DataAnnotationsValidator>
              <ValidationSummary></ValidationSummary>
              <li><h6 class="dropdown-header">@@Firstname</h6></li>
              <InputText @bind-Value="NewUser.FirstName"></InputText>
              <li><h6 class="dropdown-header">@@Lastname</h6></li>
              <InputText @bind-Value="NewUser.LastName"></InputText>
              <li><h6 class="dropdown-header">@@Username</h6></li>
              <InputText @bind-Value="NewUser.UserName"></InputText>
              <li><h6 class="dropdown-header">@@Password</h6></li>
              <InputText @bind-Value="NewUser.Password"></InputText>
              <li><h6 class="dropdown-header">@@Email</h6></li>
              <InputText @bind-Value="NewUser.Email"></InputText>
              <li><h6 class="dropdown-header">@@Phonenumber</h6></li>
              <InputText @bind-Value="NewUser.PhoneNumber"></InputText>
              <li><hr class="dropdown-divider"></li>
              <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary btn-light">Signin</button>
              </div>
            </EditForm>
          </ul>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link active dropdown-toggle" href="#" id="navbar-dropdown-login" data-bs-toggle="dropdown" aria-expanded="false">Login</a>
          <ul class="dropdown-menu" aria-labelledby="navbar-dropdown-login">
            <EditForm Model="User" OnValidSubmit="OnValidSubmitLoginUserAsync" OnInvalidSubmit="OnInvalidSubmitLoginUserAsync">
              <DataAnnotationsValidator></DataAnnotationsValidator>
              <ValidationSummary></ValidationSummary>
              <li><h6 class="dropdown-header">@@Username</h6></li>
              <InputText @bind-Value="User.UserName"></InputText>
              <li><h6 class="dropdown-header">@@Password</h6></li>
              <InputText @bind-Value="User.Password"></InputText>
              <li><hr class="dropdown-divider"></li>
              <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary btn-light">Login</button>
              </div>
            </EditForm>
          </ul>
        </li>
      </ul>
    </div>
  </div>
</nav>
<!-- Navbar -->

<!-- Body -->
<main>
    <div class="row h-100 parallax">
      <div class="col-lg-2 d-none d-lg-block d-xl-block d-xxl-block p-0 bg-transparent" id="left-panel"></div>
      <div class="col p-0 pt-5 text-center bg-white" id="content">@Body</div>
      <div class="col-lg-2 d-none d-lg-block d-xl-block d-xxl-block p-0 bg-transparent" id="right-panel"></div>
    </div>
</main>
<!-- Body -->

<style>
  .object-fit-cover {
      object-fit: cover;
  }
  
  .cover-image {
      width: 100%;
      height: calc(100vw / 5.8 - 1px);
      min-height: 103px;
  }
  
  #left-panel, #content, #right-panel {
    min-height: 100%;
  }
  
  .parallax {
      background-image: url("img/parallax.jpg");
      height: 100%;
      background-attachment: fixed;
      background-position: center;
      background-repeat: repeat-y;
      background-size: cover;
  }
</style>

@code {
  UserForAuthenticationDto User { get; set; } = new();
  UserForRegistrationDto NewUser { get; set; } = new();

  async Task OnValidSubmitLoginUserAsync()
  {
    throw new NotImplementedException();
  }
  
  async Task OnInvalidSubmitLoginUserAsync()
  {
    throw new NotImplementedException();
  }

  async Task SigninUserAsync()
  {
    throw new NotImplementedException();
  }

  async Task OnValidSubmitSignInUserAsync()
  {
    throw new NotImplementedException();
  }
  
  async Task OnInvalidSubmitSignInUserAsync()
  {
    throw new NotImplementedException();
  }

}

